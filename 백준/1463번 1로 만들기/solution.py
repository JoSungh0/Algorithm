x=int(input())
dp={1:0}
def rec(n): #재귀형식의 문제풀이
    if n in dp.keys(): # n이 1일 때 연산횟수는 0
        return dp[n]
    if (n%3==0) and (n%2==0): #둘 다 나누어 떨어지는 경우
        dp[n]=min(rec(n//3)+1, rec(n//2)+1) 
        #3과 2로 나누는 것 중 더 적은 수를 넣는다
        # +1 은 n을 3, 2로 나누는 연산횟수 1회
    elif n%3==0: # 1. 3으로만 나누어 떨어지는 경우
        dp[n]=min(rec(n//3)+1, rec(n-1)+1)
        # 3으로 나눈 경우와 1을 뺀 뒤 1이 되는데 걸리는 최소연산 횟수를 비교
    elif n%2==0: # 2. 2로만 나누어 떨어지는 경우
        dp[n]=min(rec(n//2)+1, rec(n-1)+1)
        # 2으로 나눈 경우와 1을 뺀 뒤 1이 되는데 걸리는 최소연산 횟수를 비교
    else: # 3. -1을 하는 경우
        dp[n]=rec(n-1)+1
        # n-1이 1이 되는데 걸리는 최소한의 연산 횟수 + 1을 빼는 연산 횟수 1회
    return dp[n] #연산횟수를 반환
print(rec(x))
